// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: file.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Структура для запроса на добавление картинки на сервер
type PictureUploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Указываем имя под которым будем сохранять изображения
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Само изображение в виде байтовой последовательности
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PictureUploadRequest) Reset() {
	*x = PictureUploadRequest{}
	mi := &file_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PictureUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureUploadRequest) ProtoMessage() {}

func (x *PictureUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureUploadRequest.ProtoReflect.Descriptor instead.
func (*PictureUploadRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{0}
}

func (x *PictureUploadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PictureUploadRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Описание изображения для отправки в виде списка таких структур клиенту
type PictureFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PictureFile) Reset() {
	*x = PictureFile{}
	mi := &file_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PictureFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureFile) ProtoMessage() {}

func (x *PictureFile) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureFile.ProtoReflect.Descriptor instead.
func (*PictureFile) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{1}
}

func (x *PictureFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PictureFile) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PictureFile) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Ответ от сервера с массивом инфы внутри
type ListPicturesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pictures      []*PictureFile         `protobuf:"bytes,1,rep,name=pictures,proto3" json:"pictures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPicturesResponse) Reset() {
	*x = ListPicturesResponse{}
	mi := &file_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPicturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPicturesResponse) ProtoMessage() {}

func (x *ListPicturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPicturesResponse.ProtoReflect.Descriptor instead.
func (*ListPicturesResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{2}
}

func (x *ListPicturesResponse) GetPictures() []*PictureFile {
	if x != nil {
		return x.Pictures
	}
	return nil
}

// Запрос файла на скачивание
type DownloadPictureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadPictureRequest) Reset() {
	*x = DownloadPictureRequest{}
	mi := &file_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadPictureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadPictureRequest) ProtoMessage() {}

func (x *DownloadPictureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadPictureRequest.ProtoReflect.Descriptor instead.
func (*DownloadPictureRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadPictureRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

// Возвращать будем только байты. Пусть клиент думает сам как его сохранять
type DownloadPictureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadPictureResponse) Reset() {
	*x = DownloadPictureResponse{}
	mi := &file_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadPictureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadPictureResponse) ProtoMessage() {}

func (x *DownloadPictureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadPictureResponse.ProtoReflect.Descriptor instead.
func (*DownloadPictureResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadPictureResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_file_proto protoreflect.FileDescriptor

const file_file_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"file.proto\x12\x10pictures_storage\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\">\n" +
	"\x14PictureUploadRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\x97\x01\n" +
	"\vPictureFile\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"Q\n" +
	"\x14ListPicturesResponse\x129\n" +
	"\bpictures\x18\x01 \x03(\v2\x1d.pictures_storage.PictureFileR\bpictures\"5\n" +
	"\x16DownloadPictureRequest\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\"-\n" +
	"\x17DownloadPictureResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data2\xa6\x02\n" +
	"\x15PictureStorageService\x12O\n" +
	"\rUploadPicture\x12&.pictures_storage.PictureUploadRequest\x1a\x16.google.protobuf.Empty\x12T\n" +
	"\x12ListStoredPictures\x12\x16.google.protobuf.Empty\x1a&.pictures_storage.ListPicturesResponse\x12f\n" +
	"\x0fDownloadPicture\x12(.pictures_storage.DownloadPictureRequest\x1a).pictures_storage.DownloadPictureResponseB\tZ\a/pkg/pbb\x06proto3"

var (
	file_file_proto_rawDescOnce sync.Once
	file_file_proto_rawDescData []byte
)

func file_file_proto_rawDescGZIP() []byte {
	file_file_proto_rawDescOnce.Do(func() {
		file_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)))
	})
	return file_file_proto_rawDescData
}

var file_file_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_file_proto_goTypes = []any{
	(*PictureUploadRequest)(nil),    // 0: pictures_storage.PictureUploadRequest
	(*PictureFile)(nil),             // 1: pictures_storage.PictureFile
	(*ListPicturesResponse)(nil),    // 2: pictures_storage.ListPicturesResponse
	(*DownloadPictureRequest)(nil),  // 3: pictures_storage.DownloadPictureRequest
	(*DownloadPictureResponse)(nil), // 4: pictures_storage.DownloadPictureResponse
	(*timestamppb.Timestamp)(nil),   // 5: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),           // 6: google.protobuf.Empty
}
var file_file_proto_depIdxs = []int32{
	5, // 0: pictures_storage.PictureFile.created_at:type_name -> google.protobuf.Timestamp
	5, // 1: pictures_storage.PictureFile.updated_at:type_name -> google.protobuf.Timestamp
	1, // 2: pictures_storage.ListPicturesResponse.pictures:type_name -> pictures_storage.PictureFile
	0, // 3: pictures_storage.PictureStorageService.UploadPicture:input_type -> pictures_storage.PictureUploadRequest
	6, // 4: pictures_storage.PictureStorageService.ListStoredPictures:input_type -> google.protobuf.Empty
	3, // 5: pictures_storage.PictureStorageService.DownloadPicture:input_type -> pictures_storage.DownloadPictureRequest
	6, // 6: pictures_storage.PictureStorageService.UploadPicture:output_type -> google.protobuf.Empty
	2, // 7: pictures_storage.PictureStorageService.ListStoredPictures:output_type -> pictures_storage.ListPicturesResponse
	4, // 8: pictures_storage.PictureStorageService.DownloadPicture:output_type -> pictures_storage.DownloadPictureResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_file_proto_init() }
func file_file_proto_init() {
	if File_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_proto_goTypes,
		DependencyIndexes: file_file_proto_depIdxs,
		MessageInfos:      file_file_proto_msgTypes,
	}.Build()
	File_file_proto = out.File
	file_file_proto_goTypes = nil
	file_file_proto_depIdxs = nil
}
